/*
 * MainWindow2.java
 *
 * Created on __DATE__, __TIME__
 */

package com.funnyChat.core;

import java.awt.Panel;
import java.io.File;
import java.io.IOException;

import com.funnyChat.plugin.Plugin;
import com.funnyChat.plugin.PluginManager;
import com.funnyChat.utils.ConfigurationInfo;
import com.funnyChat.utils.LayoutInfo;
import com.funnyChat.utils.Log.LogType;

/**
 *
 * @author  __USER__
 */
public class MainWindow2 extends javax.swing.JFrame {

	/** Creates new form MainWindow2 */
	public MainWindow2() {
		initComponents();
		this.setLocation(200, 200);
		// load the configuration file
		mConfInfo = new ConfigurationInfo();

		try {
			if (!mConfInfo.loadConfFile()) {
				mConfInfo.createConfFile();
			}
		} catch (IOException e) {
			Core.getLogger().addLog(
					"Failed to load or create the configuration file.",
					LogType.DEBUG);
		}

		// read layout information to layout main window
		File _default_layout = mConfInfo.getDefaultLayout();

		mLayoutInfo = new LayoutInfo(_default_layout);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jMenuBar1 = new javax.swing.JMenuBar();
		jMenu1 = new javax.swing.JMenu();
		jMenu2 = new javax.swing.JMenu();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				MainWindow2.this.windowClosing(evt);
			}
		});

		jMenu1.setText("Preference");
		jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				preferenceClicked(evt);
			}
		});
		jMenuBar1.add(jMenu1);
		jMenuBar1.add(jMenu2);

		setJMenuBar(jMenuBar1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 430,
				Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 394,
				Short.MAX_VALUE));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents
	public void registerPanel(String _plugin_name, Panel _panel) {
		this.add(_panel);
		_panel.setVisible(true);
		mLayoutInfo.registerPanel(_plugin_name, _panel);
	}

	public void updatePanel(String _plugin_name, Panel _old_panel,
			Panel _new_panel) {
		this.remove(_old_panel);
		this.add(_new_panel);
		_new_panel.setVisible(true);
		mLayoutInfo.removePanel(_plugin_name);
		mLayoutInfo.registerPanel(_plugin_name, _new_panel);
	}
	public void initWindow(String _window_title) {
		// read windows attributes
		int[] _size = mConfInfo.getWindowSize();
		int[] _loc = mConfInfo.getWindowLocation();

		for (Panel p : mLayoutInfo.getPanels())
			this.add(p);

		// read plug-ins information to load plug-ins
		PluginManager _pm = PluginManager.getInstance();
		int _it = 0;
		for (Plugin p : _pm.getPlugins()) {
			if (_it >= mLayoutInfo.getPanelCount())
				mLayoutInfo.registerPanel(p.getPluginName(), p.getPanel());
			p.setPanel(mLayoutInfo.getPanel(p.getPluginName()));
			p.onCreate();
		}

		this.setTitle(_window_title);
		this.setSize(_size[0], _size[1]);
		this.setLocation(_loc[0], _loc[1]);
	}

	private void deinitWindow() {
		try {
			mConfInfo.saveConfFile();
		} catch (IOException e) {
			Core.getLogger().addLog(
					"Failed to save the configuration information.",
					LogType.DEBUG);
		}
		this.dispose();
	}

	private void windowClosing(java.awt.event.WindowEvent evt) {
		deinitWindow();
		Core.getInstance().deinitialize();
	}

	private void preferenceClicked(java.awt.event.MouseEvent evt) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				final PreferenceWindow dialog = new PreferenceWindow(
						new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					public void windowClosing(java.awt.event.WindowEvent e) {
						dialog.dispose();
					}
				});
				dialog.setVisible(true);
			}
		});
	}

	public ConfigurationInfo getConfigInfo() {
		return mConfInfo;
	}

	/**
	 * @param args the command line arguments
	 */
	/*public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MainWindow2().setVisible(true);
			}
		});
	}*/

	private ConfigurationInfo mConfInfo;
	private LayoutInfo mLayoutInfo;

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JMenu jMenu1;
	private javax.swing.JMenu jMenu2;
	private javax.swing.JMenuBar jMenuBar1;
	// End of variables declaration//GEN-END:variables

}